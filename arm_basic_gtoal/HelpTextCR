; > HelpTextCr
HELPTOKENINFO = "Part of the CASE <expression> OF statement."
 = TAND,"Bitwise logical and between two integers. Priority 6."
 = TDIV,"Integer division, rounded towards zero, between two integers. Priority 3."
 = TEOR,"Bitwise logical exclusive-or between two integers. Priority 7."
 = TMOD,"Remainder after integer division between two integers. Priority 3."
 = TOR,"Bitwise logical or between two integers. Priority 7."
 = TERROR,"Part of ON ERROR; LOCAL ERROR and RESTORE ERROR statements.",0
 =        "Cause an error: ERROR <number>,<string>."
 = TLINE,"Draw a line: LINE x1,y1,x2,y2.",0
 =       "Part of INPUT LINE or LINE INPUT statement."
 = TOFF,"OFF: turn cursor off.",0
 =      "Part of TRACE OFF, ON ERROR OFF statements."
 = TSTEP,"Part of the FOR..TO..STEP structure."
 = TSPC,"In PRINT or INPUT statements, prints out n spaces: PRINT SPC(10)."
 = TTAB,"In PRINT or INPUT statements:",0
 =      "TAB to column n: PRINT TAB(10)s$.",0
 =      "TAB to screen position x,y: PRINT TAB(10,20)s$."
 = TELSE,"Part of the IF..THEN..ELSE structure. If found at the start of line, it is part",0
 = "of the block IF..THEN..ELSE..ENDIF structure.",0
 = "ELSE can also appear in ON .. GOTO/GOSUB/PROC to set the default option."
 = TTHEN,"Part of the IF..THEN structure. If THEN is followed by a newline it introduces",0
 = "a block structured IF..THEN..ELSE..ENDIF."
 = TCONST,"Introduces a line number reference in internal form."
 = TOPENI,"Open for Update: the function opens a file for input and output."
 = TABS,"This function gives the magnitude (absolute value) of a number (<factor>)."
 = TACS,"This function gives the arc cosine of a number (<factor>)."
 = TADC,"This function gives the value of the specified analogue port or buffer."
 = TASC,"This function gives the ASCII code of the first character of a string."
 = TASN,"This function gives the arc sine of a number (<factor>)."
 = TATN,"This function gives the arc tangent of a number (<factor>)."
 = TBGET,"This function gives the next byte from the specified file: BGET#<channel>."
 = TCOS,"This function gives the cosine of a number (<factor>)."
 = TCOUNT,"This function gives the number of characters PRINTed since the last newline."
 = TDEG,"This function gives the value in degrees of a number in radians."
 = TERL,"This function gives the line number of the last error."
 = TERR,"This function gives the error number of the last error."
 = TEVAL,"This function evaluates a string as if it were in the program: EVAL(""2*X+1"")."
 = TEXP,"This function gives the exponential of a number (<factor>)."
 = TEXT,"This function gives the length (extent) of an open file: EXT#<channel>.",0
 =      "EXT#<channel>=<expression> sets the length of an open file."
 = TFALSE,"This function gives the logical value 'false' i.e. 0."
 = TFN,"Call a function with FNfred(x,y): define one with DEF FNfred(x,y)."
 = TGET,"This function gives the ASCII value of the next character in the input stream."
 = TINKEY,"INKEY 0 to 32767: function waits <number> centiseconds to read character.",0
 =        "INKEY -255 to -1: function checks specific key for TRUE/FALSE.",0
 =        "INKEY -256: function gives operating system number."
 = TINSTR,"INSTR(<string>,<sub string>[,<start position>]) find sub string position."
 = TINT,"This function gives the nearest integer less than or equal to the number."
 = TLEN,"This function gives the length of a string."
 = TLN,"This function gives the natural logarithm (base e) of a number (<factor>)."
 = TLOG,"This function gives the common logarithm (base 10) of a number (<factor>)."
 = TNOT,"This function gives the number with all bits inverted (0 and 1 exchanged)."
 = TOPENU,"Open for Input: the function opens a file for input."
 = TOPENO,"Open for Output: the function opens a file for output."
 = TPI,"This function gives the value of 'pi' 3.1415926535."
 = TPOINT,"POINT(x,y) gives the logical colour of a graphics point."
 = TPOS,"This function gives the x-coordinate of the text cursor."
 = TRAD,"This function gives the value in radians of a number in degrees."
 = TRND,"RND: function gives a random integer.",0
 =      "RND(n), n<0: initialise random number generator based on n.",0
 =      "RND(0): last RND(1) value.",0
 =      "RND(1): random real 0..1.",0
 =      "RND(n), n>1: random value between 1 and INT(n)."
 = TSGN,"This function gives the values -1,0,1 for negative, zero, positive numbers."
 = TSIN,"This function gives the sine of a number (<factor>)."
 = TSQR,"This function gives the square root of a number (<factor>)."
 = TTAN,"This function gives the tangent of a number (<factor>)."
 = TTO,"TO: part of FOR..TO..",0
 =     "TOP: gives the address of the end of the program."
 = TTRUE,"This function gives the logical value 'true' i.e. -1."
 = TUSR,"This function gives the value returned by a machine code routine."
 = TVAL,"This function gives the numeric value of a textual string e.g. VAL""23""."
 = TVPOS,"This function gives the y-coordinate of the text cursor."
 = TCHRD,"This function gives the one character string of the supplied ASCII code."
 = TGETD,"This function gives the next input character as a one character string.",0
 =      "GET$#<channel> gives next string from the file."
 = TINKED,"CHR$(INKEY...): see INKEY."
 = TLEFTD,"LEFT$(<string>,<number>): gives left number of characters from string.",0
 =        "LEFT$(<string>): gives left LEN-1 characters.",0
 =        "LEFT$(<string variable>[,<count>])=<string>: overwrite characters from start."
 = TMIDD,"MID$(<string>,<position>): gives all of string starting from position.",0
 = "MID$(<string>,<position>,<count>): gives some of string from position.",0
 = "MID$(<string variable>,<position>[,<count>])=<string>: overwrite characters."
 = TRIGHTD,"RIGHT$(<string>,<number>): gives rightmost number of characters from string.",0
 =         "RIGHT$(<string>): gives rightmost character.",0
 =         "RIGHT$(<string variable>[,<count>])=<string>: overwrite characters at end."
 = TSTRD,"STR$[~]<number>: gives string representation [in hex] of a number (<factor>)."
 = TSTRND,"STRING$(<number>,<string>): gives string replicated the number of times."
 = TEOF,"EOF#<channel>: function gives TRUE if at end of open file; else FALSE."
 = TWHEN,"WHEN <expression>[,<expression>]^: identifies case section at start of line.",0
 =       "See CASE."
 = TOTHER,"Identifies case exceptional section at start of line. See CASE."
 = TENDCA,"End of case structure at start of line. See CASE."
 = TENDIF,"End of block if structure at start of line. See IF."
 = TENDWH,"End of while structure. See WHILE."
 = TPTR2,"This function gives the position in a file: PTR#<channel>.",0
 =       "PTR#<channel>=<expression> sets the position in a file."
 = TPAGE2,"This psuedo-variable reads or sets the address of the start of the program."
 = TTIME2,"This psuedo-variable reads or sets the computational real time clock.",0
 =       "TIME$ reads/sets the display version of the clock."
 = TLOMM2,"This psuedo-variable reads or sets the address of the start of the variables."
 = THIMM2,"This psuedo-variable reads or sets the address of the end of memory."
 = TBEEP,"SOUND <channel>,<amplitude>,<pitch>,<duration>: make a sound.
 =       "SOUND ON|OFF: enable/disable sounds."
 = TBPUT,"BPUT#<channel>,<number>: put byte to open file.",0
 =       "BPUT#<channel>,<string>[;]: put string to open file, with[out] newline."
 = TCALL,"Call machine code."
 = TCHAIN,"Load and run a new Basic program."
 = TCLEAR,"Forget all variables."
 = TCLOSE,"CLOSE#<channel>: close specified file."
 = TCLG,"Clear graphics screen."
 = TCLS,"Clear text screen."
 = TDATA,"Introduces line of DATA to be READ. The list of items is separated by ,s."
 = TDEF,"Define function or procedure: DEF FN|PROC<name>[(<parameter list>)].",0
 =      "End function with =<expression>; end procedure with ENDPROC."
 = TDIM,"DIM fred(100,100): create and initialise an array.",0
 =      "DIM fred% 100: allocate space for a byte array etc.",0
 =      "DIM(fred()): function gives the number of dimensions.",0
 =      "DIM(fred(),n): function gives the size of the n'th dimension."
 = TDRAW,"DRAW [BY] x,y: graphics draw to/relative by x,y."
 = TEND,"Statement marking end of program execution.",0
 =      "As a function END gives the end address of used memory."
 = TENDPR,"End of procedure definition."
 = TENVEL,"Envelope takes 14 numeric parameters separated by ,s."
 = TFOR,"FOR <variable> = <start value> TO <limit value> [STEP <step size>]."
 = TGOSUB,"GOSUB <line number>: call subroutine at line number."
 = TGOTO,"GOTO <line number>: go to line number."
 = TGRAPH,"GCOL a [TINT t]: set graphics foreground colour [and tint] (background 128+a).",0
 =        "GCOL <action>,a [TINT t]: set graphics fore/background colour and action."
 = TIF,"Single line if: IF <expression> [THEN] <statements> [ELSE <statements>].",0
 = "Block if: IF <expression> THEN<newline>",0
 = "            <lines>",0
 = "optional: ELSE <lines>",0
 = "          ENDIF"
 = TINPUT,"INPUT [LINE]['|TAB|SPC][""display string""][,|;]<variable>: input from user.",0
 = "INPUT#<channel>,<list of variables>: input data from open file."
 = TLET,"Optional part of assignment."
 = TLOCAL,"LOCAL <list of variables>: make things private to function or procedure.",0
 = "LOCAL ERROR: save error control status on stack."
 = TMODE,"MODE <number>: set screen mode."
 = TMOVE,"MOVE [BY] x,y: graphics move to/relative by x,y."
 = TNEXT,"NEXT [<variable>[,<variable>]^]: closes one or several FOR..NEXT structures."
 = TON,"ON: cursor on.",0
 =     "ON ERROR [LOCAL|OFF] define error handler.",0
 =     "ON <expression> GOTO|GOSUB|PROC.... call from specified list item."
 = TVDU,"VDU <number>[;|][,<number>[;|]]: list of values to be sent to vdu.",0
 = ", only - 8 bits; ; 16 bits; | 8 bytes of zeroes."
 = TPLOT,"PLOT n,x,y: graphics operation n."
 = TPRINT,"PRINT ['|TAB|SPC][""display string""][<expression>][;] print things in fields",0
 = "defined by @%. See the manual.",0
 = "PRINT#<channel>,<list of expressions>: print data to open file."
 = TPROC,"Call a procedure with PROCfred(x,y); define one with DEF PROCfred(p1,p2)."
 = TREAD,"READ <list of variables>: read the variables in turn from DATA statements."
 = TREM,"Ignores rest of line."
 = TREPEAT,"REPEAT: start of REPEAT..UNTIL structure. Statement delimiter not required."
 = TREPORT,"REPORT: print last error message.",0
 =         "REPORT$ function gives string of last error."
 = TRESTORE,"RESTORE [<line number>]: restore the data pointer to first or specified line.",0
 = "RESTORE ERROR: restore error control status from stack."
 = TRETURN,"End of subroutine."
 = TRUN,"Clear variables and start execution at beginning of program."
 = TSTOP,"Stop program."
 = TTEXT,"COLOUR a [TINT t]: set text foreground colour [and tint] (background 128+a).",0
 =       "COLOUR a,p: set palette entry for logical colour a to physical colour p.",0
 =       "COLOUR a,r,g,b: set palette entry for a to r, g, b physical colour."
 = TTRACE,"TRACE [STEP] ON|OFF|PROC|<number>: trace [in single step mode] on or off or",0
 = "procedure/function calls or lines below the number."
 = TUNTIL,"UNTIL <expression>: end of REPEAT..UNTIL structure."
 = TWIDTH,"WIDTH <expression>: set width of output. Non-operational!"
 = TOSCL,"OSCLI <string>: give string to Operating System Command Line Interpreter."
 = TOSCL,0
HELPTWOSTATEMENT = TCASE,"CASE <expression> OF: start of CASE..WHEN..OTHERWISE..ENDCASE structure."
 = TCIRCLE,"CIRCLE [FILL] x,y,r: draw circle outline/solid: needs GXR."
 = TFILL,"FILL x,y: flood fill from point x,y: needs GXR."
 = TORGIN,"ORIGIN x,y: sets x,y as the new graphics 0,0 point."
 = TPSET,"POINT [BY] x,y: set pixel at/relative to x,y.",0
 =       "POINT TO x,y: position pointer at x,y if not linked to mouse."
 = TRECT,"RECTANGLE [FILL] xlo,ylo,width[,height] [TO xlo,ylo]:",0
 = "Draw a rectangle outline/solid or copy/move the rectangle."
 = TSWAP,"SWAP <variable>,<variable>: exchange the contents."
 = TWHILE,"WHILE <expression>: start of WHILE..ENDWHILE structure."
 = TWAIT,"Wait for vertical sync."
 = TMOUSE,"MOUSE x,y,z: sets x,y to the current mouse position; z to the button state.",0
 =        "MOUSE COLOUR a,r,g,b: set mouse palette entry for a to r, g, b physical colour."
 =        "MOUSE OFF: turns mouse pointer off.",0
 =        "MOUSE ON [a]: turns mouse pointer 1 [or a] on.",0
 =        "MOUSE RECTANGLE x,y,width,height: constrain mouse movement to inside rectangle.",0
 =        "MOUSE STEP a[,b]: sets mouse step multiplier to a,a [or a,b].",0
 =        "MOUSE TO x,y: positions mouse and pointer at x,y."
 = TQUIT,"The QUIT statement leaves the interpreter."
 = TSYS,"The SYS statement calls the operating system:",0
 =      "SYS <expression> [,<expression>]^ [TO <variable>[,<variable>]^[;<variable>]]"
 = TINSTALL,"Permanently install a procedure/function library: see HELP LIBRARY."
 = TLIBRARY,"LIBRARY <string>: procedures and functions of the named program can be used."
 = TTINT,"TINT a,t: set the tint for COLOUR/GCOL/fore/back a to t in 256 colour modes.",0
 =       "Also available as a suffix to GCOL and COLOUR."
 = TMANDEL,"MANDEL x,y: sets C% to the Mandelbrot colour of x,y limit D%."
 = TMANDEL,0
HELPTWOCOMMAND
 = TAPPEND,"This command appends a file to the program and renumbers the new lines."
 = TAUTO,"This command generates line numbers for typing in a program.",0
 = "AUTO [<base number>[,<step size>]]"
 = TDELET,"This command deletes all lines between the specified numbers.",0
 = "DELETE <start line number>,<end line number>"
 = TEDIT,"This command calls the ARM BASIC Editor."
 = THELP,"This command gives help on usage of the interpreter."
 = TLIST,"This command lists the program:",0
 = "LIST [<line number>][,[<line number>]][IF<pattern>]. list section [if pattern]",0
 = "LISTO <option number>. Bits mean:-",0
 = "0: space before line",0
 = "1: indent structure",0
 = "2: split lines at :",0
 = "3: don't list line number",0
 = "4: list tokens in lower case"
 = TLOAD,"This command loads a new program."
 = TLVAR,"This command lists all variables in use."
 = TNEW,"This command erases the current program."
 = TOLD,"This command recovers the program just after a NEW."
 = TRENUM,"This command renumbers the lines in the program:",0
 = "RENUMBER [<base number>[,<step size>]]"
 = TSAVE,"This command saves the current program."
 = TTWIN,"This command converts the program to text and calls Twin."
 = TTWINO,"This command converts the program to text with a LIST option and calls Twin."
 = TTWINO,0
HELPTWOFUNCTION
 = TSUM,"This function returns the sum of all elements in an array."
 = TSAVE,127
 ALIGN
 LNK Command
